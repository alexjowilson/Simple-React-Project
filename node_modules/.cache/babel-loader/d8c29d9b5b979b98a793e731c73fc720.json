{"ast":null,"code":"var _jsxFileName = \"/Users/alexwilson/Documents/udemy/ReactCourse/Practice_Project/Simple-React-Project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AddUser from './components/Users/AddUser';\nimport UsersList from './components/Users/UsersList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [usersList, setUsersList] = useState([]); // array to hold array of (usernames,age), initially empty\n\n  /* handler to update usersList whenever user adds in a new (username,age) */\n\n  const onAddUserHandler = (uName, uAge) => {\n    /* update usersList */\n    setUsersList(prevUsersList => {\n      /* copy all items in previous list and append new (username,age) to the array */\n      return [...prevUsersList, {\n        name: uName,\n        age: uAge\n      }];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddUser, {\n      onAddUser: onAddUserHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UsersList, {\n      users: usersList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rCuhwovjWVqRB5NhAf7v+2So/Rg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alexwilson/Documents/udemy/ReactCourse/Practice_Project/Simple-React-Project/src/App.js"],"names":["React","useState","AddUser","UsersList","App","usersList","setUsersList","onAddUserHandler","uName","uAge","prevUsersList","name","age"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C,CAFa,CAEmC;;AAEhD;;AACA,QAAMM,gBAAgB,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAExC;AACAH,IAAAA,YAAY,CAAGI,aAAD,IACd;AACE;AACA,aAAO,CAAC,GAAGA,aAAJ,EAAmB;AAACC,QAAAA,IAAI,EAAEH,KAAP;AAAcI,QAAAA,GAAG,EAAEH;AAAnB,OAAnB,CAAP;AACD,KAJW,CAAZ;AAKD,GARD;;AAWA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAEF;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAtBQD,G;;KAAAA,G;AAwBT,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport AddUser from './components/Users/AddUser';\nimport UsersList from './components/Users/UsersList';\n\nfunction App() {\n\n  const [usersList, setUsersList] = useState([]); // array to hold array of (usernames,age), initially empty\n\n  /* handler to update usersList whenever user adds in a new (username,age) */\n  const onAddUserHandler = (uName, uAge) => {\n\n    /* update usersList */\n    setUsersList( (prevUsersList) =>\n    {\n      /* copy all items in previous list and append new (username,age) to the array */\n      return [...prevUsersList, {name: uName, age: uAge}]\n    });\n  }\n\n\n  return (\n    <div>\n      <AddUser onAddUser={onAddUserHandler}></AddUser>\n      <UsersList users={usersList}/> \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}