{"ast":null,"code":"var _jsxFileName = \"/Users/alexwilson/Documents/udemy/ReactCourse/Practice_Project/Simple-React-Project/src/components/Users/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport styles from './AddUser.module.css';\nimport Button from '../UI/Button';\nimport ErrorModal from '../UI/ErrorModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const [enteredUsername, setEnteredUsername] = useState(''); // array destructuring\n\n  const [enteredAge, setEnteredAge] = useState();\n  const [error, setError] = useState();\n\n  const usernameChangeHandler = event => {\n    setEnteredUsername(event.target.value);\n  };\n\n  const ageChangeHandler = event => {\n    setEnteredAge(event.target.value);\n  };\n  /* function to handle when a user submits the form below */\n\n\n  const addUserHandler = event => {\n    event.preventDefault(); // stop default HTTP request\n\n    /* error checking */\n    // when user tries to enter empty form\n\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\n      console.log(\"tell the user to put something in the entries\");\n      setError({\n        title: 'Invalid input',\n        message: 'Please enter in a valid name and age (non-empty values)'\n      });\n      return;\n    } // when user enters invalid age\n\n\n    if (+enteredAge <= 0) {\n      setError({\n        title: 'Invalid age',\n        message: 'Please enter in a valid age (number greater than 0)'\n      });\n      return;\n    }\n\n    console.log(\"Username = \" + enteredUsername + \", Age = \" + enteredAge);\n    /* \n        forward the newly enteredUsername, entered age\n        to the parent, App.js that holds the array that stores the\n        array of (usernames,age)\n    */\n\n    props.onAddUser(enteredUsername, enteredAge);\n    /* reset input fields after form submission */\n\n    setEnteredUsername('');\n    setEnteredAge('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      currentStyling: `${styles['input']}`,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          value: enteredUsername,\n          onChange: usernameChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age (Years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\",\n          value: enteredAge,\n          onChange: ageChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddUser, \"8mC6S1JheodmXlFL77Ajo/oiLgQ=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/Users/alexwilson/Documents/udemy/ReactCourse/Practice_Project/Simple-React-Project/src/components/Users/AddUser.js"],"names":["React","useState","Card","styles","Button","ErrorModal","AddUser","props","enteredUsername","setEnteredUsername","enteredAge","setEnteredAge","error","setError","usernameChangeHandler","event","target","value","ageChangeHandler","addUserHandler","preventDefault","trim","length","console","log","title","message","onAddUser"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport styles from './AddUser.module.css';\nimport Button from '../UI/Button';\nimport ErrorModal from '../UI/ErrorModal';\n\nconst AddUser = props => {\n\n    const [enteredUsername, setEnteredUsername] = useState(''); // array destructuring\n    const [enteredAge, setEnteredAge] = useState();\n    const [error, setError] = useState();\n\n    const usernameChangeHandler = (event) =>\n    {\n        setEnteredUsername(event.target.value);\n    }\n\n    const ageChangeHandler = (event) =>\n    {\n        setEnteredAge(event.target.value);\n    }\n\n    /* function to handle when a user submits the form below */\n    const addUserHandler = (event) => {\n        event.preventDefault(); // stop default HTTP request\n\n\n        /* error checking */\n        // when user tries to enter empty form\n        if(enteredUsername.trim().length === 0 || enteredAge.trim().length === 0)\n        {\n            console.log(\"tell the user to put something in the entries\");\n            setError({\n                title: 'Invalid input', \n                message: 'Please enter in a valid name and age (non-empty values)'\n            });\n            return;    \n        }\n\n        // when user enters invalid age\n        if(+enteredAge <= 0)\n        {\n            setError({\n                title: 'Invalid age', \n                message: 'Please enter in a valid age (number greater than 0)'\n            });\n            return;\n        }\n\n        console.log(\"Username = \" + enteredUsername + \", Age = \" + enteredAge);\n        /* \n            forward the newly enteredUsername, entered age\n            to the parent, App.js that holds the array that stores the\n            array of (usernames,age)\n        */\n        props.onAddUser(enteredUsername,enteredAge);\n\n        /* reset input fields after form submission */\n        setEnteredUsername('');\n        setEnteredAge('');\n    };\n\n    return ( \n        <div>\n            {error && <ErrorModal title={error.title} message={error.message}/>}\n\n            <Card currentStyling={`${styles['input']}`}>\n                <form onSubmit={addUserHandler}>\n                    <label htmlFor=\"username\">Username</label>\n                    <input id=\"username\" type=\"text\" value={enteredUsername} onChange={usernameChangeHandler}/>\n                    <label htmlFor=\"age\">Age (Years)</label>\n                    <input id=\"age\" type=\"number\" value={enteredAge} onChange={ageChangeHandler}/>\n                    <Button type=\"submit\">Add User</Button>\n                </form>\n            </Card>\n        </div>\n\n    );\n};\n\nexport default AddUser;"]},"metadata":{},"sourceType":"module"}