{"ast":null,"code":"var _jsxFileName = \"/Users/alexwilson/Documents/udemy/ReactCourse/Practice_Project/Simple-React-Project/src/components/Users/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport styles from './AddUser.module.css';\nimport Button from '../UI/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const [enteredUsername, setEnteredUsername] = useState(''); // array destructuring\n\n  const [enteredAge, setEnteredAge] = useState();\n  const [isValidUsername, setIsValidUsername] = useState(true);\n  const [isValidAge, setIsValidAge] = useState(true);\n\n  const usernameChangeHandler = event => {\n    setEnteredUsername(event.target.value);\n    console.log(\"enteredUsername = \" + enteredUsername);\n    /* error check the enteredUsername */\n\n    /* if the enteredUsername is less than 3 characters, throw error */\n\n    if (enteredUsername.trim().length < 3) {\n      setIsValidUsername(false);\n    }\n  };\n\n  const ageChangeHandler = event => {\n    setEnteredAge(event.target.value);\n    /* error check the enteredAge */\n\n    /* if the enteredAge is less than 0, throw error */\n\n    if (enteredAge <= 0) {\n      setEnteredAge(false);\n    }\n  };\n  /* function to handle when a user submits the form below */\n\n\n  const addUserHandler = event => {\n    event.preventDefault(); // stop default HTTP request\n\n    console.log(enteredUsername);\n    console.log(\"Username = \" + enteredUsername + \", Age = \" + enteredAge);\n    /* reset input fields after form submission */\n\n    setEnteredUsername('');\n    setEnteredAge('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    inputStyling: `${styles['input']} ${!isValidUsername && styles.invalid}`,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addUserHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: enteredUsername,\n        onChange: usernameChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"age\",\n        children: \"Age (Years)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"age\",\n        type: \"number\",\n        value: enteredAge,\n        onChange: ageChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddUser, \"bEGq7g0ilWgmwvItOXiLHGltch8=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/Users/alexwilson/Documents/udemy/ReactCourse/Practice_Project/Simple-React-Project/src/components/Users/AddUser.js"],"names":["React","useState","Card","styles","Button","AddUser","props","enteredUsername","setEnteredUsername","enteredAge","setEnteredAge","isValidUsername","setIsValidUsername","isValidAge","setIsValidAge","usernameChangeHandler","event","target","value","console","log","trim","length","ageChangeHandler","addUserHandler","preventDefault","invalid"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA;;AAErB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD,CAFqB,CAEuC;;AAC5D,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,EAA5C;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,IAAD,CAA5C;;AAIA,QAAMc,qBAAqB,GAAIC,KAAD,IAC9B;AACIR,IAAAA,kBAAkB,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBb,eAAnC;AAEA;;AACA;;AACA,QAAGA,eAAe,CAACc,IAAhB,GAAuBC,MAAvB,GAAgC,CAAnC,EACA;AACIV,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH;AACJ,GAXD;;AAaA,QAAMW,gBAAgB,GAAIP,KAAD,IACzB;AACIN,IAAAA,aAAa,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AAEA;;AACA;;AACA,QAAGT,UAAU,IAAI,CAAjB,EACA;AACIC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH;AACJ,GAVD;AAYA;;;AACA,QAAMc,cAAc,GAAIR,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACS,cAAN,GAD8B,CACN;;AACxBN,IAAAA,OAAO,CAACC,GAAR,CAAYb,eAAZ;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBb,eAAhB,GAAkC,UAAlC,GAA+CE,UAA3D;AAEA;;AACAD,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAE,IAAAA,aAAa,CAAC,EAAD,CAAb;AACH,GARD;;AAUA,sBACI,QAAC,IAAD;AAAM,IAAA,YAAY,EAAG,GAAEP,MAAM,CAAC,OAAD,CAAU,IAAG,CAACQ,eAAD,IAAoBR,MAAM,CAACuB,OAAQ,EAA7E;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEF,cAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,EAAE,EAAC,UAAV;AAAqB,QAAA,IAAI,EAAC,MAA1B;AAAiC,QAAA,KAAK,EAAEjB,eAAxC;AAAyD,QAAA,QAAQ,EAAEQ;AAAnE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,EAAE,EAAC,KAAV;AAAgB,QAAA,IAAI,EAAC,QAArB;AAA8B,QAAA,KAAK,EAAEN,UAArC;AAAiD,QAAA,QAAQ,EAAEc;AAA3D;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA5DD;;GAAMlB,O;;KAAAA,O;AA8DN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport styles from './AddUser.module.css';\nimport Button from '../UI/Button';\n\nconst AddUser = props => {\n\n    const [enteredUsername, setEnteredUsername] = useState(''); // array destructuring\n    const [enteredAge, setEnteredAge] = useState();\n    const [isValidUsername, setIsValidUsername] = useState(true);\n    const [isValidAge, setIsValidAge] = useState(true);\n\n\n\n    const usernameChangeHandler = (event) =>\n    {\n        setEnteredUsername(event.target.value);\n        console.log(\"enteredUsername = \" + enteredUsername);\n\n        /* error check the enteredUsername */\n        /* if the enteredUsername is less than 3 characters, throw error */\n        if(enteredUsername.trim().length < 3)\n        {\n            setIsValidUsername(false);\n        }\n    }\n\n    const ageChangeHandler = (event) =>\n    {\n        setEnteredAge(event.target.value);\n\n        /* error check the enteredAge */\n        /* if the enteredAge is less than 0, throw error */\n        if(enteredAge <= 0)\n        {\n            setEnteredAge(false);\n        }\n    }\n\n    /* function to handle when a user submits the form below */\n    const addUserHandler = (event) => {\n        event.preventDefault(); // stop default HTTP request\n        console.log(enteredUsername);\n        console.log(\"Username = \" + enteredUsername + \", Age = \" + enteredAge);\n\n        /* reset input fields after form submission */\n        setEnteredUsername('');\n        setEnteredAge('');\n    };\n\n    return ( \n        <Card inputStyling={`${styles['input']} ${!isValidUsername && styles.invalid}`}>\n            <form onSubmit={addUserHandler}>\n                <label htmlFor=\"username\">Username</label>\n                <input id=\"username\" type=\"text\" value={enteredUsername} onChange={usernameChangeHandler}/>\n                <label htmlFor=\"age\">Age (Years)</label>\n                <input id=\"age\" type=\"number\" value={enteredAge} onChange={ageChangeHandler}/>\n                <Button type=\"submit\">Add User</Button>\n            </form>\n        </Card>\n    );\n\n\n\n\n};\n\nexport default AddUser;"]},"metadata":{},"sourceType":"module"}